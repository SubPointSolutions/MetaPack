<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>true</IsMethod>
  <IsClass>false</IsClass>
  <Tags />
  <Title>Create_Package_SPMeta2</Title>
  <Description />
  <MethodBodyWithFunction>
        
        public void Create_Package_SPMeta2()
        {
            // A high level abstraction for solution package.
            // Follows NuGet spec design - https://docs.nuget.org/ndocs/schema/nuspec
            // Solution package is a container for SERIALIZED models.
            // It means that solution package does not depend on a particular API oe assembly so that  models have to be in serialazable, platform and api independent way.

            var solutionPackage = new SolutionPackageBase();

            solutionPackage.Name = "Contoso Intranet SPMeta2 - Site Fields";
            solutionPackage.Title = "Contoso Intranet SPMeta2 - Site Fields";

            solutionPackage.Description = "Contains site level fields for Contoso intranet";
            solutionPackage.Id = "Contoso.Intranet.SiteFields.SPMeta2";
            solutionPackage.Authors = "SubPoint Solutions";
            solutionPackage.Company = "SubPoint Solutions";
            solutionPackage.Version = "1.0.0.0";
            solutionPackage.Owners = "SubPoint Solutions";

            solutionPackage.ReleaseNotes = "Initial set of the site fields for Contoso Intranet";
            solutionPackage.Summary = "All site fields required for Contoso intranet";
            solutionPackage.ProjectUrl = "https://github.com/SubPointSolutions/DefinitelyPacked";
            solutionPackage.IconUrl = "https://github.com/SubPointSolutions/metapack/metapack.png";
            solutionPackage.LicenseUrl = "https://opensource.org/licenses/MIT";

            solutionPackage.Copyright = "All yours";
            solutionPackage.Tags = "MetaPack SPMeta2 SiteFields Taxonomy";

            // here are all your SPMeta2 models
            var models = new List&lt;ModelNode&gt;();

            // create a new ModelContainerBase for every model
            // and then add to solution package
            // you can put "Order" option to control deployment order of the models

            for (var index = 0; index &lt; models.Count; index++)
            {
                var model = models[index];
                var xmlContext = SPMeta2Model.ToXML(model);

                // create ModelContainerBase, put serialized model there
                var modelContainer = new ModelContainerBase
                {
                    Model = Encoding.UTF8.GetBytes(xmlContext),
                };

                // add sort order to control deployment order of the models
                modelContainer.AdditionalOptions.Add(new OptionValue
                {
                    Name = DefaultOptions.Model.Order.Id,
                    Value = index.ToString()
                });

                // add model container to solution
                solutionPackage.AddModel(modelContainer);
            }

            // flag a provider which will be used for solution package deployment
            solutionPackage.AdditionalOptions.Add(new OptionValue
            {
                Name = DefaultOptions.SolutionToolPackage.PackageId.Id,
                Value = "MetaPack.SPMeta2"
            });

            var solutionPackageService = new SPMeta2SolutionPackageService();

            // save your NuGet solution package as stream
            var nuGetPackageStream = solutionPackageService.Pack(solutionPackage, null);

            // or save it straight to file, for instance, on shared folder
            solutionPackageService.PackToFile(solutionPackage, "Contoso.Intranet.SiteFields.SPMeta2.nupkg");

            // or push it straight to NuGet gallery you've got - http://NuGet.org or http://MyGet.org
            // follow instructions on how obtain Url/Key for a specific NuGet Gallery
            var nuGetGallery_ApiUrl = "";
            var nuGetGallery_ApiKey = "";

            solutionPackageService.Push(solutionPackage, nuGetGallery_ApiUrl, nuGetGallery_ApiKey);
        }</MethodBodyWithFunction>
  <MethodBody>// A high level abstraction for solution package.
// Follows NuGet spec design - https://docs.nuget.org/ndocs/schema/nuspec
// Solution package is a container for SERIALIZED models.
// It means that solution package does not depend on a particular API oe assembly so that  models have to be in serialazable, platform and api independent way.

var solutionPackage = new SolutionPackageBase();

solutionPackage.Name = "Contoso Intranet SPMeta2 - Site Fields";
solutionPackage.Title = "Contoso Intranet SPMeta2 - Site Fields";

solutionPackage.Description = "Contains site level fields for Contoso intranet";
solutionPackage.Id = "Contoso.Intranet.SiteFields.SPMeta2";
solutionPackage.Authors = "SubPoint Solutions";
solutionPackage.Company = "SubPoint Solutions";
solutionPackage.Version = "1.0.0.0";
solutionPackage.Owners = "SubPoint Solutions";

solutionPackage.ReleaseNotes = "Initial set of the site fields for Contoso Intranet";
solutionPackage.Summary = "All site fields required for Contoso intranet";
solutionPackage.ProjectUrl = "https://github.com/SubPointSolutions/DefinitelyPacked";
solutionPackage.IconUrl = "https://github.com/SubPointSolutions/metapack/metapack.png";
solutionPackage.LicenseUrl = "https://opensource.org/licenses/MIT";

solutionPackage.Copyright = "All yours";
solutionPackage.Tags = "MetaPack SPMeta2 SiteFields Taxonomy";

// here are all your SPMeta2 models
var models = new List&lt;ModelNode&gt;();

// create a new ModelContainerBase for every model
// and then add to solution package
// you can put "Order" option to control deployment order of the models

for (var index = 0; index &lt; models.Count; index++)
{
    var model = models[index];
    var xmlContext = SPMeta2Model.ToXML(model);

    // create ModelContainerBase, put serialized model there
    var modelContainer = new ModelContainerBase
    {
        Model = Encoding.UTF8.GetBytes(xmlContext),
    };

    // add sort order to control deployment order of the models
    modelContainer.AdditionalOptions.Add(new OptionValue
    {
        Name = DefaultOptions.Model.Order.Id,
        Value = index.ToString()
    });

    // add model container to solution
    solutionPackage.AddModel(modelContainer);
}

// flag a provider which will be used for solution package deployment
solutionPackage.AdditionalOptions.Add(new OptionValue
{
    Name = DefaultOptions.SolutionToolPackage.PackageId.Id,
    Value = "MetaPack.SPMeta2"
});

var solutionPackageService = new SPMeta2SolutionPackageService();

// save your NuGet solution package as stream
var nuGetPackageStream = solutionPackageService.Pack(solutionPackage, null);

// or save it straight to file, for instance, on shared folder
solutionPackageService.PackToFile(solutionPackage, "Contoso.Intranet.SiteFields.SPMeta2.nupkg");

// or push it straight to NuGet gallery you've got - http://NuGet.org or http://MyGet.org
// follow instructions on how obtain Url/Key for a specific NuGet Gallery
var nuGetGallery_ApiUrl = "";
var nuGetGallery_ApiKey = "";

solutionPackageService.Push(solutionPackage, nuGetGallery_ApiUrl, nuGetGallery_ApiKey);

</MethodBody>
  <Language>cs</Language>
  <Namespace>SubPointSolutions.Docs.Views.MetaPack</Namespace>
  <ClassName>Index</ClassName>
  <MethodName>Create_Package_SPMeta2</MethodName>
  <ClassComment />
  <MethodFullName>SubPointSolutions.Docs.Views.MetaPack.Index.Create_Package_SPMeta2</MethodFullName>
  <ClassFullName>SubPointSolutions.Docs.Views.MetaPack.Index</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>Index.cs</SourceFileName>
  <SourceFileNameWithoutExtension>Index</SourceFileNameWithoutExtension>
  <SourceFileFolder>C:\Users\vagrant\Source\Repos\MetaPack-Git\SubPointSolutions.Docs\bin\Debug\..\..\Views\MetaPack\getting-started</SourceFileFolder>
  <SourceFilePath>C:\Users\vagrant\Source\Repos\MetaPack-Git\SubPointSolutions.Docs\bin\Debug\..\..\Views\MetaPack\getting-started\Index.cs</SourceFilePath>
</DocSample>